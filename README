=====
Mflix
=====

This is a short guide on setting up the system and environment dependencies
required for the MFlix application to run.


Project Structure
-----------------

Clone the mflix-js repo.

**dao** directory, which contains all database interfacing methods. The API will make calls to Data Access Objects (DAOs) that interact directly with MongoDB.

The unit tests in **test** will test these database access methods directly,
without going through the API. The UI will run these methods in integration
tests, and therefore requires the full application to be running.

The API layer is fully implemented, as is the UI. The application is programmed
to  run on port **5000** by default - if you need to run on a port other than
5000, you can edit the **dotenv_win** (if on Windows) or the **dotenv_unix** file
(if on Linux or Mac) in the root directory to modify the value of **PORT**.


Node Library Dependencies
-------------------------

The dependencies for the MFlix application should be downloaded using the
``npm`` command-line tool. You can get this tool by `downloading Node.js
<https://nodejs.org/en/download/>`_. Make sure to choose the correct option for
your operating system.

Once the installation is complete, you may need to restart your computer before
using the command line tools. You can test that it's installed by running the
following command:

.. code-block:: sh

  node -v

This should print out the version of ``node`` you currently have - It's recommended to use the latest Long Term Support version, currently 10.16.3, so this command should print something like
``v10.16.3``.

Once ``npm`` is installed, you can install the MFlix dependencies by running the
following command from the **mflix-js** directory:

.. code-block:: sh

  npm install

You must run this from the top level of the project, so ``npm`` has access to
the **package.json** file where the dependencies are.

You may see warnings depending on your operating system from **fsevents** or
Husky warning about **git** missing. These are informational only and do not
impact the functionality of the application. You can safely ignore them.

You may also get a **node-gyp** error. Run ``npm rebuild`` and it should resolve
this and install the dependencies required.

While running ``npm install``, you might encounter the below error regarding ``node-gyp rebuild``.
Although, it is completely harmless and you can start the application by running ``npm start``.


MongoDB Installation
--------------------

It is recommended to connect MFlix with MongoDB Atlas, so you do not need to have a MongoDB server running on your host machine. 

That said, you are still required to have the MongoDB server installed, in order
to be able to use two server tool dependencies:

- ``mongorestore``

  - A utility for importing binary data into MongoDB.

- ``mongo``

  - The MongoDB shell

To download these command line tools, please visit the
`MongoDB download center <https://www.mongodb.com/download-center#enterprise>`_ and choose the appropriate platform.

All of these tools are free to use. MongoDB Enterprise is also free to use for testing and evaluation purposes.


MongoDB Atlas Cluster
---------------------

MFlix uses MongoDB to persist all of its data.

One of the easiest ways to get up and running with MongoDB is to use MongoDB Atlas, a hosted and fully-managed database solution.

For setting up mongodb cluster, refer here: <https://www.youtube.com/watch?v=_d8CBOtadRA>`_


Importing Data (Optional)
-------------------------

**Note: You can restore the data needed for Mflix from the mflix/data directory **

The ``mongorestore`` command necessary to import the data is located below. Copy the command and use an Atlas SRV string OR your local mongodb setup string to import the data (including username and password credentials).

Replace the SRV string below with your own:

.. code-block:: sh

  # navigate to mflix-js directory
  cd mflix-js

  # import data into Atlas
  mongorestore --drop --gzip --uri \
    "mongodb+srv://<username>:<password>@<YOUR_CLUSTER_URI>" data

  # import data into local MongoDB setup
  mongorestore --drop --gzip --uri \
    mongodb://<username>:<password>@localhost:27017/?authSource=admin" data

The entire dataset contains almost 200,000 documents, so importing this data may take 5-10 minutes.


Running the Application
-----------------------

In order for the application to use Atlas, you will need a file called **.env** to contain the connection information. In the **mflix-js** directory you can find one file, **dotenv_unix**(Note, I have added dotenv_unix_example with dummy data, replace it with your own data).

When you've edited the file, rename it to **.env** with the following command:

.. code-block:: sh

  mv dotenv_unix .env

In the **mflix-js** directory, run the following commands:

.. code-block:: sh

  # install MFlix dependencies
  npm install

  # start the MFlix application
  npm start

This will start the application. You can then access the MFlix application at
`http://localhost:5000/ <http://localhost:5000/>`_.


Running the Unit Tests
----------------------

To run the unit tests for this project, you will use `Jest
<https://jestjs.io/docs/en/getting-started>`_. Jest has been included in this project's dependencies, so ``npm install`` should install everything you need.

For example, to run the test **connection-pooling.test.js**,
run the command:

.. code-block:: sh

  npm test -t connection-pooling

